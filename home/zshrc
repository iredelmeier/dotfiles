#!/bin/env zsh

# Settings shared with bash
# shellcheck source=/dev/null
source "${HOME}/.dotfiles/shellrc.sh"

for file in "${HOME}/.dotfiles/zsh/"*; do
  if [[ -r "${file}" ]] && [[ -f "${file}" ]]; then
    # shellcheck source=/dev/null
    source "${file}"
  fi
done

# From oh-my-zsh
# Save the location of the current completion dump file.
if [ -z "${ZSH_COMPDUMP}" ]; then
  ZSH_COMPDUMP="${ZDOTDIR:-${HOME}}/.zcompdump-${SHORT_HOST}-${ZSH_VERSION}"
fi

if [[ ${ZSH_DISABLE_COMPFIX} != 'true' ]]; then
  # If completion insecurities exist, warn the user without enabling completions.
  if ! compaudit &>/dev/null; then
    # This function resides in the "lib/compfix.zsh" script sourced above.
    handle_completion_insecurities
  # Else, enable and cache completions to the desired file.
  else
    compinit -d "${ZSH_COMPDUMP}"
  fi
else
  compinit -i -d "${ZSH_COMPDUMP}"
fi

if [[ -r ~/.fzf.zsh ]]; then
  # shellcheck source=/dev/null
  source ~/.fzf.zsh
else
  if [[ -r /usr/share/doc/fzf/examples/key-bindings.zsh ]]; then
    source /usr/share/doc/fzf/examples/key-bindings.zsh
  fi

  if [[ -r /usr/share/doc/fzf/examples/completion.zsh ]]; then
    source /usr/share/doc/fzf/examples/completion.zsh
  fi
fi

if command -v direnv > /dev/null; then
  eval "$(direnv hook zsh)"
fi
#compdef clid
_clid() {
  eval $(env COMMANDLINE="${words[1,$CURRENT]}" _CLID_COMPLETE=complete-zsh  clid)
}
if [[ "$(basename -- ${(%):-%x})" != "_clid" ]]; then
  compdef _clid clid
fi
#compdef clid
_clid() {
  eval $(env COMMANDLINE="${words[1,$CURRENT]}" _CLID_COMPLETE=complete-zsh  clid)
}
if [[ "$(basename -- ${(%):-%x})" != "_clid" ]]; then
  compdef _clid clid
fi
#compdef clid
_clid() {
  eval $(env COMMANDLINE="${words[1,$CURRENT]}" _CLID_COMPLETE=complete-zsh  clid)
}
if [[ "$(basename -- ${(%):-%x})" != "_clid" ]]; then
  compdef _clid clid
fi
if [ -e /home/isobel/.nix-profile/etc/profile.d/nix.sh ]; then . /home/isobel/.nix-profile/etc/profile.d/nix.sh; fi # added by Nix installer
#compdef clyde
_clyde() {
  eval $(env COMMANDLINE="${words[1,$CURRENT]}" _CLYDE_COMPLETE=complete-zsh  clyde)
}
if [[ "$(basename -- ${(%):-%x})" != "_clyde" ]]; then
  compdef _clyde clyde
fi
#compdef clyde
_clyde() {
  eval $(env COMMANDLINE="${words[1,$CURRENT]}" _CLYDE_COMPLETE=complete-zsh  clyde)
}
if [[ "$(basename -- ${(%):-%x})" != "_clyde" ]]; then
  compdef _clyde clyde
fi
#compdef clyde
_clyde() {
  eval $(env COMMANDLINE="${words[1,$CURRENT]}" _CLYDE_COMPLETE=complete-zsh  clyde)
}
if [[ "$(basename -- ${(%):-%x})" != "_clyde" ]]; then
  compdef _clyde clyde
fi
