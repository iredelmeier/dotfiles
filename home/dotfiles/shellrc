#!/bin/bash

CWD="$(dirname "${BASH_SOURCE[0]-$0}")"

for file in "${CWD}/"*; do
  if [[ -r "$file" ]] && [[ -f "$file" ]] && [[ "$file" != "${BASH_SOURCE[0]-$0}" ]]; then
    # shellcheck source=/dev/null
    source "$file"
  fi
done

if [[ -r "/usr/share/autojump/autojump.sh" ]]; then
  # shellcheck source=/dev/null
  source /usr/share/autojump/autojump.sh
fi

if [[ -f "/opt/homebrew/etc/profile.d/autojump.sh" ]]; then
  source /opt/homebrew/etc/profile.d/autojump.sh
fi

export GDK_SCALE=2
export GDK_DPI_SCALE=0.5
export QT_AUTO_SCREEN_SCALE_FACTOR=1

# Based on https://github.com/jessfraz/dotfiles/blob/955c65ebd7c1a7528bf6b6cdf67b14d293300c71/.bashrc#L113-L129
if ! pgrep -x -u "$USER" gpg-agent >/dev/null 2>&1; then
  gpg-connect-agent /bye >/dev/null 2>&1
fi
# use a tty for gpg
# solves error: "gpg: signing failed: Inappropriate ioctl for device"
GPG_TTY=$(tty)
export GPG_TTY
# Set SSH to use gpg-agent
unset SSH_AGENT_PID
if [[ "${gnupg_SSH_AUTH_SOCK_by:-0}" -ne $$ ]]; then
	if [[ -z "$SSH_AUTH_SOCK" ]] || [[ "$SSH_AUTH_SOCK" == *"apple.launchd"* ]]; then
		SSH_AUTH_SOCK="$(gpgconf --list-dirs agent-ssh-socket)"
		export SSH_AUTH_SOCK
	fi
fi
