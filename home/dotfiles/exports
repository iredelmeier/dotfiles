#!/bin/bash

if [[ ! "${EDITOR}" && "$(which nvim)" ]]; then
  EDITOR="$(which nvim)"
  export EDITOR="${EDITOR}"
fi

if [[ ! "${LANG}" ]]; then
  if locale -a | grep -q ^en_CA; then
    export LANG="en_CA.UTF-8"
  elif locale -a | grep -q ^en_GB; then
    export LANG="en_GB.UTF-8"
  else
    export LANG="en_US.UTF-8"
  fi
fi

if [[ ! "${LC_ALL}" ]]; then
  export LC_ALL="${LANG}"
fi

if [[ ! "${PAGER}" ]]; then
  export PAGER="less"
fi

# Based on https://github.com/jessfraz/dotfiles/blob/955c65ebd7c1a7528bf6b6cdf67b14d293300c71/.bashrc#L113-L129
if ! pgrep -x -u "$USER" gpg-agent >/dev/null 2>&1; then
  gpg-connect-agent /bye >/dev/null 2>&1
fi
# use a tty for gpg
# solves error: "gpg: signing failed: Inappropriate ioctl for device"
GPG_TTY=$(tty)
export GPG_TTY
# Set SSH to use gpg-agent
unset SSH_AGENT_PID
if [[ "${gnupg_SSH_AUTH_SOCK_by:-0}" -ne $$ ]]; then
	if [[ -z "$SSH_AUTH_SOCK" ]] || [[ "$SSH_AUTH_SOCK" == *"apple.launchd"* ]]; then
		SSH_AUTH_SOCK="$(gpgconf --list-dirs agent-ssh-socket)"
		export SSH_AUTH_SOCK
	fi
fi

export FZF_DEFAULT_COMMAND='ag -g ""'
export FZF_CTRL_R_OPTS="-e"

export GOPATH="${HOME}/workspace/go"
export GOPATH_GLOBAL="$GOPATH"

if command -v rustc > /dev/null; then
  LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:$(rustc --print sysroot)/lib"
  export LD_LIBRARY_PATH="$LD_LIBRARY_PATH"
fi

if command -v podman > /dev/null; then
  export DOCKER_HOST='unix:///Users/isobel/.local/share/containers/podman/machine/podman-machine-default/podman.sock'
fi
